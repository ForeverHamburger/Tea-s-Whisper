// Generated by view binder compiler. Do not edit!
package com.xuptggg.forum.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.xuptggg.forum.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPublishBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText etPublishContent;

  @NonNull
  public final EditText etPublishTitle;

  @NonNull
  public final LinearLayout llPublish;

  @NonNull
  public final LinearLayout llPublishImage;

  @NonNull
  public final LinearLayout llPublishTop;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final RecyclerView rvNineGrid;

  @NonNull
  public final TextView tvCancelPublish;

  @NonNull
  public final TextView tvPublish;

  private ActivityPublishBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText etPublishContent, @NonNull EditText etPublishTitle,
      @NonNull LinearLayout llPublish, @NonNull LinearLayout llPublishImage,
      @NonNull LinearLayout llPublishTop, @NonNull ConstraintLayout main,
      @NonNull RecyclerView rvNineGrid, @NonNull TextView tvCancelPublish,
      @NonNull TextView tvPublish) {
    this.rootView = rootView;
    this.etPublishContent = etPublishContent;
    this.etPublishTitle = etPublishTitle;
    this.llPublish = llPublish;
    this.llPublishImage = llPublishImage;
    this.llPublishTop = llPublishTop;
    this.main = main;
    this.rvNineGrid = rvNineGrid;
    this.tvCancelPublish = tvCancelPublish;
    this.tvPublish = tvPublish;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPublishBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPublishBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_publish, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPublishBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.et_publish_content;
      EditText etPublishContent = ViewBindings.findChildViewById(rootView, id);
      if (etPublishContent == null) {
        break missingId;
      }

      id = R.id.et_publish_title;
      EditText etPublishTitle = ViewBindings.findChildViewById(rootView, id);
      if (etPublishTitle == null) {
        break missingId;
      }

      id = R.id.ll_publish;
      LinearLayout llPublish = ViewBindings.findChildViewById(rootView, id);
      if (llPublish == null) {
        break missingId;
      }

      id = R.id.ll_publish_image;
      LinearLayout llPublishImage = ViewBindings.findChildViewById(rootView, id);
      if (llPublishImage == null) {
        break missingId;
      }

      id = R.id.ll_publish_top;
      LinearLayout llPublishTop = ViewBindings.findChildViewById(rootView, id);
      if (llPublishTop == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.rv_nine_grid;
      RecyclerView rvNineGrid = ViewBindings.findChildViewById(rootView, id);
      if (rvNineGrid == null) {
        break missingId;
      }

      id = R.id.tv_cancel_publish;
      TextView tvCancelPublish = ViewBindings.findChildViewById(rootView, id);
      if (tvCancelPublish == null) {
        break missingId;
      }

      id = R.id.tv_publish;
      TextView tvPublish = ViewBindings.findChildViewById(rootView, id);
      if (tvPublish == null) {
        break missingId;
      }

      return new ActivityPublishBinding((ConstraintLayout) rootView, etPublishContent,
          etPublishTitle, llPublish, llPublishImage, llPublishTop, main, rvNineGrid,
          tvCancelPublish, tvPublish);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
